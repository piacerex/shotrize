defmodule Epson.V1.Create do
  alias Epson.Printer.Client
  @username "jxh51408xs2md2@print.epsonconnect.com"
  @password ""
  @basic_credentials "Y2NhMjdhZmNmNDIzNDEzOWI2N2YxMzdlMDQ4MjY2M2Q6d0xlRDlDR3JGU3JuMlhOcUhjeFZVWUhkSWNhR1lyQmJzZmlOMHM0VnhRdjZuOUl2OFcyYklsWUxmbFZNU3hnRw=="

  def create( %{ "data" => data } ) do
    tokens   = authorize()
    filename = get_last_from_filepath( data )

    job = create_job( payload(), tokens )

    Client.upload( job, filename, "1.png" ) 
    Client.print( job, tokens )
    Client.get_result( job, tokens )
  end

  defp payload do
    %{
      "job_name"   => "test-job",
      "print_mode" => "photo",
      "print_setting" => %{
        "media_size"    => "ms_l",
        "media_type"    => "mt_photopaper",
        "borderless"    => false,
        "print_quality" => "normal",
        "source"        => "front1",
        "color_mode"    => "color",
        "2_sided"       => "none",
        "reverse_order" => false,
        "copies"        => 1,
        "collate"       => false
      }
    }
  end

  def authorize() do
    data = %{
        username:          @username,
        password:          @password,
        basic_credentials: @basic_credentials
      }
      |> Client.build_authorize
    Json.post( data[ "host" ], data[ "path" ], data[ "body" ] |> String.replace( "%40", "@" ), data[ "header" ] )
  end

  def create_job( job, tokens ) do
    data = Client.build_create_job( job, tokens )
    Json.post( data[ "host" ], data[ "path" ], data[ "body" ], data[ "header" ] )
  end

  def get_last_from_filepath( data ), do: data |> String.split( "/" ) |> List.last |> File.read!

end

IO.puts "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
IO.puts "[params]"
IO.inspect params[ "data" ]
IO.puts "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"

result = Epson.V1.Create.create( params )

IO.puts "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
IO.puts "[result]"
IO.inspect result
IO.puts "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"

{ :ok, result }
